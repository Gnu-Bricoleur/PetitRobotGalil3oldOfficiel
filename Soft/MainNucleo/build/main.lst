ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** #include "assert.h"
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN PTD */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PD */
  56:Src/main.c    **** 
  57:Src/main.c    **** #define _DEBUG 1       //print all the debug info
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PM */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** TIM_HandleTypeDef htim1;
  68:Src/main.c    **** TIM_HandleTypeDef htim2;
  69:Src/main.c    **** TIM_HandleTypeDef htim3;
  70:Src/main.c    **** TIM_HandleTypeDef htim4;
  71:Src/main.c    **** TIM_HandleTypeDef htim5;
  72:Src/main.c    **** 
  73:Src/main.c    **** UART_HandleTypeDef huart2;
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PV */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PV */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  80:Src/main.c    **** void SystemClock_Config(void);
  81:Src/main.c    **** static void MX_GPIO_Init(void);
  82:Src/main.c    **** static void MX_USART2_UART_Init(void);
  83:Src/main.c    **** static void MX_TIM2_Init(void);
  84:Src/main.c    **** static void MX_TIM3_Init(void);
  85:Src/main.c    **** static void MX_TIM4_Init(void);
  86:Src/main.c    **** static void MX_TIM5_Init(void);
  87:Src/main.c    **** static void MX_TIM1_Init(void);
  88:Src/main.c    **** /* USER CODE BEGIN PFP */
  89:Src/main.c    **** 
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 3


  90:Src/main.c    **** /* USER CODE END PFP */
  91:Src/main.c    **** 
  92:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  93:Src/main.c    **** /* USER CODE BEGIN 0 */
  94:Src/main.c    **** double positionX = 0.0;
  95:Src/main.c    **** double positionY = 0.0;
  96:Src/main.c    **** double angle = 0.0;
  97:Src/main.c    **** 
  98:Src/main.c    **** int consigneDroit = 0;
  99:Src/main.c    **** int consigneGauche = 0;
 100:Src/main.c    **** 
 101:Src/main.c    **** int debugCounter = 0;
 102:Src/main.c    **** 
 103:Src/main.c    **** int tim4Tot= 0;
 104:Src/main.c    **** int tim5Tot=0;
 105:Src/main.c    **** 
 106:Src/main.c    **** char buffer[50] = "";
 107:Src/main.c    **** char buffer2[50] = "";
 108:Src/main.c    **** 
 109:Src/main.c    **** int fixedFrequency = 40;//frequency of the loop in ms
 110:Src/main.c    **** int debugMessageFrequency = 10;//in number of loop
 111:Src/main.c    **** 
 112:Src/main.c    **** /* USER CODE END 0 */
 113:Src/main.c    **** 
 114:Src/main.c    **** /**
 115:Src/main.c    ****   * @brief  The application entry point.
 116:Src/main.c    ****   * @retval int
 117:Src/main.c    ****   */
 118:Src/main.c    **** int main(void)
 119:Src/main.c    **** {
 120:Src/main.c    ****   /* USER CODE BEGIN 1 */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END 1 */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Src/main.c    ****   HAL_Init();
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE BEGIN Init */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* USER CODE END Init */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* Configure the system clock */
 134:Src/main.c    ****   SystemClock_Config();
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* USER CODE END SysInit */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* Initialize all configured peripherals */
 141:Src/main.c    ****   MX_GPIO_Init();
 142:Src/main.c    ****   MX_USART2_UART_Init();
 143:Src/main.c    ****   MX_TIM2_Init();
 144:Src/main.c    ****   MX_TIM3_Init();
 145:Src/main.c    ****   MX_TIM4_Init();
 146:Src/main.c    ****   MX_TIM5_Init();
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 4


 147:Src/main.c    ****   MX_TIM1_Init();
 148:Src/main.c    ****   /* USER CODE BEGIN 2 */
 149:Src/main.c    ****   HAL_TIM_PWM_Start (&htim2, TIM_CHANNEL_2);
 150:Src/main.c    ****   HAL_TIM_PWM_Start (&htim3, TIM_CHANNEL_1);
 151:Src/main.c    ****   HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 152:Src/main.c    ****   HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_ALL);
 153:Src/main.c    ****   HAL_TIM_PWM_Start (&htim1, TIM_CHANNEL_4);
 154:Src/main.c    ****   /* USER CODE END 2 */
 155:Src/main.c    **** 
 156:Src/main.c    ****   /* Infinite loop */
 157:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 158:Src/main.c    ****   HAL_UART_Transmit(&huart2, "Tire moi la tirette, que ma bobinette choisse\n", sizeof("Tire moi la
 159:Src/main.c    ****   while(HAL_GPIO_ReadPin(Tirette_GPIO_Port, Tirette_Pin))
 160:Src/main.c    ****   {}
 161:Src/main.c    ****   uint32_t matchStartTicks = HAL_GetTick();
 162:Src/main.c    ****     
 163:Src/main.c    ****   HAL_UART_Transmit(&huart2, "Atttenzion, zest barti !\n", sizeof("Atttenzion, zest barti !\n"), HA
 164:Src/main.c    ****   //HAL_Delay(1000);
 165:Src/main.c    ****   uint32_t oldTicks = HAL_GetTick(); //init the time tracking variable for the fixed frequency PID 
 166:Src/main.c    **** 
 167:Src/main.c    **** 
 168:Src/main.c    **** 
 169:Src/main.c    ****   //center the encoder values
 170:Src/main.c    ****   TIM4->CNT = 30000;
 171:Src/main.c    ****   TIM5->CNT = 30000;
 172:Src/main.c    ****   
 173:Src/main.c    ****   htim1.Instance->CCR4 = 1500;//servo
 174:Src/main.c    **** 
 175:Src/main.c    **** 
 176:Src/main.c    ****   while (1)
 177:Src/main.c    ****   {
 178:Src/main.c    ****     while(HAL_GetTick() - oldTicks < fixedFrequency)
 179:Src/main.c    ****     {HAL_GPIO_WritePin(DebugTiming_GPIO_Port, DebugTiming_Pin, GPIO_PIN_SET);}
 180:Src/main.c    ****     HAL_GPIO_WritePin(DebugTiming_GPIO_Port, DebugTiming_Pin, GPIO_PIN_RESET);
 181:Src/main.c    ****     
 182:Src/main.c    ****     if (HAL_GetTick() - matchStartTicks > 90000) //make sure the robot stops after 100seconds (actu
 183:Src/main.c    ****     {
 184:Src/main.c    ****         HAL_UART_Transmit(&huart2, "Fin de match -- Timeout \n", sizeof("Fin de match -- Timeout \n
 185:Src/main.c    ****         while(1){}
 186:Src/main.c    ****     }
 187:Src/main.c    ****     
 188:Src/main.c    ****     
 189:Src/main.c    ****     oldTicks = HAL_GetTick();
 190:Src/main.c    ****     int tim4 = (TIM4->CNT-30000);
 191:Src/main.c    ****     int tim5 = (-TIM5->CNT+30000);
 192:Src/main.c    ****     TIM4->CNT = 30000;
 193:Src/main.c    ****     TIM5->CNT = 30000;
 194:Src/main.c    ****     
 195:Src/main.c    ****     tim5 *= 1.0422;
 196:Src/main.c    ****     
 197:Src/main.c    ****     updatePos(tim4, tim5, &positionX, &positionY, &angle);
 198:Src/main.c    ****     tim4Tot += tim4;//for debug
 199:Src/main.c    ****     tim5Tot += tim5;
 200:Src/main.c    ****     
 201:Src/main.c    ****     stateMachine(&consigneDroit, &consigneGauche, positionX, positionY, angle, tim4, tim5, huart2);
 202:Src/main.c    ****     
 203:Src/main.c    ****     moteurGauche(consigneGauche);
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 5


 204:Src/main.c    ****     moteurDroit(consigneDroit);
 205:Src/main.c    ****     
 206:Src/main.c    ****     
 207:Src/main.c    ****     debugCounter += 1;
 208:Src/main.c    ****     if (_DEBUG == 1)
 209:Src/main.c    ****     {
 210:Src/main.c    ****         if (debugCounter == debugMessageFrequency)
 211:Src/main.c    ****         {
 212:Src/main.c    ****             sprintf(buffer, "pos : %f / %f / %f\n",positionX, positionY, (angle*1000));
 213:Src/main.c    ****             HAL_UART_Transmit(&huart2, buffer, sizeof(buffer), HAL_MAX_DELAY);
 214:Src/main.c    ****             sprintf(buffer2, "tot : %d / %d / %d / %d\n",tim4Tot, tim5Tot, consigneDroit, consigneG
 215:Src/main.c    ****             HAL_UART_Transmit(&huart2, buffer2, sizeof(buffer2), HAL_MAX_DELAY);
 216:Src/main.c    ****             debugCounter = 0;
 217:Src/main.c    ****         }
 218:Src/main.c    ****     }
 219:Src/main.c    **** 
 220:Src/main.c    ****     /* USER CODE END WHILE */
 221:Src/main.c    **** 
 222:Src/main.c    ****     /* USER CODE BEGIN 3 */
 223:Src/main.c    ****   }
 224:Src/main.c    ****   /* USER CODE END 3 */
 225:Src/main.c    **** }
 226:Src/main.c    **** 
 227:Src/main.c    **** /**
 228:Src/main.c    ****   * @brief System Clock Configuration
 229:Src/main.c    ****   * @retval None
 230:Src/main.c    ****   */
 231:Src/main.c    **** void SystemClock_Config(void)
 232:Src/main.c    **** {
 233:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 234:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 235:Src/main.c    **** 
 236:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 237:Src/main.c    ****   */
 238:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 239:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 240:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 241:Src/main.c    ****   */
 242:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 243:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 244:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 245:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 246:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 247:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 248:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 249:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 250:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 251:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 252:Src/main.c    ****   {
 253:Src/main.c    ****     Error_Handler();
 254:Src/main.c    ****   }
 255:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 256:Src/main.c    ****   */
 257:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 258:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 259:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 260:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 6


 261:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 262:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 263:Src/main.c    **** 
 264:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 265:Src/main.c    ****   {
 266:Src/main.c    ****     Error_Handler();
 267:Src/main.c    ****   }
 268:Src/main.c    **** }
 269:Src/main.c    **** 
 270:Src/main.c    **** /**
 271:Src/main.c    ****   * @brief TIM1 Initialization Function
 272:Src/main.c    ****   * @param None
 273:Src/main.c    ****   * @retval None
 274:Src/main.c    ****   */
 275:Src/main.c    **** static void MX_TIM1_Init(void)
 276:Src/main.c    **** {
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 281:Src/main.c    **** 
 282:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 283:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 284:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 287:Src/main.c    **** 
 288:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 289:Src/main.c    ****   htim1.Instance = TIM1;
 290:Src/main.c    ****   htim1.Init.Prescaler = 72;
 291:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 292:Src/main.c    ****   htim1.Init.Period = 20000;
 293:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 294:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 295:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 296:Src/main.c    ****   {
 297:Src/main.c    ****     Error_Handler();
 298:Src/main.c    ****   }
 299:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 300:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 301:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 302:Src/main.c    ****   {
 303:Src/main.c    ****     Error_Handler();
 304:Src/main.c    ****   }
 305:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 306:Src/main.c    ****   sConfigOC.Pulse = 1500;
 307:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 308:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 309:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 310:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 311:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 312:Src/main.c    ****   {
 313:Src/main.c    ****     Error_Handler();
 314:Src/main.c    ****   }
 315:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 316:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 317:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 7


 318:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 319:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 320:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 321:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 322:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 323:Src/main.c    ****   {
 324:Src/main.c    ****     Error_Handler();
 325:Src/main.c    ****   }
 326:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 329:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 330:Src/main.c    **** 
 331:Src/main.c    **** }
 332:Src/main.c    **** 
 333:Src/main.c    **** /**
 334:Src/main.c    ****   * @brief TIM2 Initialization Function
 335:Src/main.c    ****   * @param None
 336:Src/main.c    ****   * @retval None
 337:Src/main.c    ****   */
 338:Src/main.c    **** static void MX_TIM2_Init(void)
 339:Src/main.c    **** {
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 342:Src/main.c    **** 
 343:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 344:Src/main.c    **** 
 345:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 346:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 349:Src/main.c    **** 
 350:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 351:Src/main.c    ****   htim2.Instance = TIM2;
 352:Src/main.c    ****   htim2.Init.Prescaler = 0;
 353:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 354:Src/main.c    ****   htim2.Init.Period = 10000;
 355:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 356:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 357:Src/main.c    ****   {
 358:Src/main.c    ****     Error_Handler();
 359:Src/main.c    ****   }
 360:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 361:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 362:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 363:Src/main.c    ****   {
 364:Src/main.c    ****     Error_Handler();
 365:Src/main.c    ****   }
 366:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 367:Src/main.c    ****   sConfigOC.Pulse = 0;
 368:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 369:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 370:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 371:Src/main.c    ****   {
 372:Src/main.c    ****     Error_Handler();
 373:Src/main.c    ****   }
 374:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 8


 375:Src/main.c    **** 
 376:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 377:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 378:Src/main.c    **** 
 379:Src/main.c    **** }
 380:Src/main.c    **** 
 381:Src/main.c    **** /**
 382:Src/main.c    ****   * @brief TIM3 Initialization Function
 383:Src/main.c    ****   * @param None
 384:Src/main.c    ****   * @retval None
 385:Src/main.c    ****   */
 386:Src/main.c    **** static void MX_TIM3_Init(void)
 387:Src/main.c    **** {
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 390:Src/main.c    **** 
 391:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 394:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 395:Src/main.c    **** 
 396:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 397:Src/main.c    **** 
 398:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 399:Src/main.c    ****   htim3.Instance = TIM3;
 400:Src/main.c    ****   htim3.Init.Prescaler = 0;
 401:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 402:Src/main.c    ****   htim3.Init.Period = 10000;
 403:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 404:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 405:Src/main.c    ****   {
 406:Src/main.c    ****     Error_Handler();
 407:Src/main.c    ****   }
 408:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 409:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 411:Src/main.c    ****   {
 412:Src/main.c    ****     Error_Handler();
 413:Src/main.c    ****   }
 414:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 415:Src/main.c    ****   sConfigOC.Pulse = 0;
 416:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 417:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 418:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 419:Src/main.c    ****   {
 420:Src/main.c    ****     Error_Handler();
 421:Src/main.c    ****   }
 422:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 423:Src/main.c    **** 
 424:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 425:Src/main.c    ****   HAL_TIM_MspPostInit(&htim3);
 426:Src/main.c    **** 
 427:Src/main.c    **** }
 428:Src/main.c    **** 
 429:Src/main.c    **** /**
 430:Src/main.c    ****   * @brief TIM4 Initialization Function
 431:Src/main.c    ****   * @param None
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 9


 432:Src/main.c    ****   * @retval None
 433:Src/main.c    ****   */
 434:Src/main.c    **** static void MX_TIM4_Init(void)
 435:Src/main.c    **** {
 436:Src/main.c    **** 
 437:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 0 */
 438:Src/main.c    **** 
 439:Src/main.c    ****   /* USER CODE END TIM4_Init 0 */
 440:Src/main.c    **** 
 441:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig = {0};
 442:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 443:Src/main.c    **** 
 444:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 1 */
 445:Src/main.c    **** 
 446:Src/main.c    ****   /* USER CODE END TIM4_Init 1 */
 447:Src/main.c    ****   htim4.Instance = TIM4;
 448:Src/main.c    ****   htim4.Init.Prescaler = 0;
 449:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 450:Src/main.c    ****   htim4.Init.Period = 0xffff;
 451:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 453:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 454:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 455:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 456:Src/main.c    ****   sConfig.IC1Filter = 5;
 457:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 458:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 459:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 460:Src/main.c    ****   sConfig.IC2Filter = 5;
 461:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 462:Src/main.c    ****   {
 463:Src/main.c    ****     Error_Handler();
 464:Src/main.c    ****   }
 465:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 466:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 467:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 468:Src/main.c    ****   {
 469:Src/main.c    ****     Error_Handler();
 470:Src/main.c    ****   }
 471:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 2 */
 472:Src/main.c    **** 
 473:Src/main.c    ****   /* USER CODE END TIM4_Init 2 */
 474:Src/main.c    **** 
 475:Src/main.c    **** }
 476:Src/main.c    **** 
 477:Src/main.c    **** /**
 478:Src/main.c    ****   * @brief TIM5 Initialization Function
 479:Src/main.c    ****   * @param None
 480:Src/main.c    ****   * @retval None
 481:Src/main.c    ****   */
 482:Src/main.c    **** static void MX_TIM5_Init(void)
 483:Src/main.c    **** {
 484:Src/main.c    **** 
 485:Src/main.c    ****   /* USER CODE BEGIN TIM5_Init 0 */
 486:Src/main.c    **** 
 487:Src/main.c    ****   /* USER CODE END TIM5_Init 0 */
 488:Src/main.c    **** 
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 10


 489:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig = {0};
 490:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 491:Src/main.c    **** 
 492:Src/main.c    ****   /* USER CODE BEGIN TIM5_Init 1 */
 493:Src/main.c    **** 
 494:Src/main.c    ****   /* USER CODE END TIM5_Init 1 */
 495:Src/main.c    ****   htim5.Instance = TIM5;
 496:Src/main.c    ****   htim5.Init.Prescaler = 0;
 497:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 498:Src/main.c    ****   htim5.Init.Period = 0xffff;
 499:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 500:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 501:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 502:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 503:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 504:Src/main.c    ****   sConfig.IC1Filter = 5;
 505:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 506:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 507:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 508:Src/main.c    ****   sConfig.IC2Filter = 5;
 509:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 510:Src/main.c    ****   {
 511:Src/main.c    ****     Error_Handler();
 512:Src/main.c    ****   }
 513:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 514:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 515:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 516:Src/main.c    ****   {
 517:Src/main.c    ****     Error_Handler();
 518:Src/main.c    ****   }
 519:Src/main.c    ****   /* USER CODE BEGIN TIM5_Init 2 */
 520:Src/main.c    **** 
 521:Src/main.c    ****   /* USER CODE END TIM5_Init 2 */
 522:Src/main.c    **** 
 523:Src/main.c    **** }
 524:Src/main.c    **** 
 525:Src/main.c    **** /**
 526:Src/main.c    ****   * @brief USART2 Initialization Function
 527:Src/main.c    ****   * @param None
 528:Src/main.c    ****   * @retval None
 529:Src/main.c    ****   */
 530:Src/main.c    **** static void MX_USART2_UART_Init(void)
 531:Src/main.c    **** {
 532:Src/main.c    **** 
 533:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 534:Src/main.c    **** 
 535:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 536:Src/main.c    **** 
 537:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 538:Src/main.c    **** 
 539:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 540:Src/main.c    ****   huart2.Instance = USART2;
 541:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 542:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 543:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 544:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 545:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 11


 546:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 547:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 548:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 549:Src/main.c    ****   {
 550:Src/main.c    ****     Error_Handler();
 551:Src/main.c    ****   }
 552:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 553:Src/main.c    **** 
 554:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 555:Src/main.c    **** 
 556:Src/main.c    **** }
 557:Src/main.c    **** 
 558:Src/main.c    **** /**
 559:Src/main.c    ****   * @brief GPIO Initialization Function
 560:Src/main.c    ****   * @param None
 561:Src/main.c    ****   * @retval None
 562:Src/main.c    ****   */
 563:Src/main.c    **** static void MX_GPIO_Init(void)
 564:Src/main.c    **** {
  27              		.loc 1 564 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8AB0     		sub	sp, sp, #40
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 565:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 565 0
  44 0006 0024     		movs	r4, #0
  45 0008 0594     		str	r4, [sp, #20]
  46 000a 0694     		str	r4, [sp, #24]
  47 000c 0794     		str	r4, [sp, #28]
  48 000e 0894     		str	r4, [sp, #32]
  49 0010 0994     		str	r4, [sp, #36]
  50              	.LBB2:
 566:Src/main.c    **** 
 567:Src/main.c    ****   /* GPIO Ports Clock Enable */
 568:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 568 0
  52 0012 0194     		str	r4, [sp, #4]
  53 0014 374B     		ldr	r3, .L3
  54 0016 1A6B     		ldr	r2, [r3, #48]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 1A63     		str	r2, [r3, #48]
  57 001e 1A6B     		ldr	r2, [r3, #48]
  58 0020 02F00402 		and	r2, r2, #4
  59 0024 0192     		str	r2, [sp, #4]
  60 0026 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 12


  61              	.LBE2:
  62              	.LBB3:
 569:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  63              		.loc 1 569 0
  64 0028 0294     		str	r4, [sp, #8]
  65 002a 1A6B     		ldr	r2, [r3, #48]
  66 002c 42F08002 		orr	r2, r2, #128
  67 0030 1A63     		str	r2, [r3, #48]
  68 0032 1A6B     		ldr	r2, [r3, #48]
  69 0034 02F08002 		and	r2, r2, #128
  70 0038 0292     		str	r2, [sp, #8]
  71 003a 029A     		ldr	r2, [sp, #8]
  72              	.LBE3:
  73              	.LBB4:
 570:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  74              		.loc 1 570 0
  75 003c 0394     		str	r4, [sp, #12]
  76 003e 1A6B     		ldr	r2, [r3, #48]
  77 0040 42F00102 		orr	r2, r2, #1
  78 0044 1A63     		str	r2, [r3, #48]
  79 0046 1A6B     		ldr	r2, [r3, #48]
  80 0048 02F00102 		and	r2, r2, #1
  81 004c 0392     		str	r2, [sp, #12]
  82 004e 039A     		ldr	r2, [sp, #12]
  83              	.LBE4:
  84              	.LBB5:
 571:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  85              		.loc 1 571 0
  86 0050 0494     		str	r4, [sp, #16]
  87 0052 1A6B     		ldr	r2, [r3, #48]
  88 0054 42F00202 		orr	r2, r2, #2
  89 0058 1A63     		str	r2, [r3, #48]
  90 005a 1B6B     		ldr	r3, [r3, #48]
  91 005c 03F00203 		and	r3, r3, #2
  92 0060 0493     		str	r3, [sp, #16]
  93 0062 049B     		ldr	r3, [sp, #16]
  94              	.LBE5:
 572:Src/main.c    **** 
 573:Src/main.c    ****   /*Configure GPIO pin Output Level */
 574:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, LD2_Pin|DIR1_Pin, GPIO_PIN_RESET);
  95              		.loc 1 574 0
  96 0064 DFF89C80 		ldr	r8, .L3+16
  97 0068 2246     		mov	r2, r4
  98 006a 4FF48461 		mov	r1, #1056
  99 006e 4046     		mov	r0, r8
 100 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 575:Src/main.c    **** 
 576:Src/main.c    ****   /*Configure GPIO pin Output Level */
 577:Src/main.c    ****   HAL_GPIO_WritePin(DebugTiming_GPIO_Port, DebugTiming_Pin, GPIO_PIN_RESET);
 102              		.loc 1 577 0
 103 0074 204D     		ldr	r5, .L3+4
 104 0076 2246     		mov	r2, r4
 105 0078 1021     		movs	r1, #16
 106 007a 2846     		mov	r0, r5
 107 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 13


 578:Src/main.c    **** 
 579:Src/main.c    ****   /*Configure GPIO pin Output Level */
 580:Src/main.c    ****   HAL_GPIO_WritePin(DIR2_GPIO_Port, DIR2_Pin, GPIO_PIN_RESET);
 109              		.loc 1 580 0
 110 0080 1E4F     		ldr	r7, .L3+8
 111 0082 2246     		mov	r2, r4
 112 0084 2021     		movs	r1, #32
 113 0086 3846     		mov	r0, r7
 114 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL2:
 581:Src/main.c    **** 
 582:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 583:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 116              		.loc 1 583 0
 117 008c 4FF40053 		mov	r3, #8192
 118 0090 0593     		str	r3, [sp, #20]
 584:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 119              		.loc 1 584 0
 120 0092 1B4B     		ldr	r3, .L3+12
 121 0094 0693     		str	r3, [sp, #24]
 585:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 585 0
 123 0096 0794     		str	r4, [sp, #28]
 586:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 124              		.loc 1 586 0
 125 0098 05A9     		add	r1, sp, #20
 126 009a 2846     		mov	r0, r5
 127 009c FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL3:
 587:Src/main.c    **** 
 588:Src/main.c    ****   /*Configure GPIO pins : LD2_Pin DIR1_Pin */
 589:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin|DIR1_Pin;
 129              		.loc 1 589 0
 130 00a0 4FF48463 		mov	r3, #1056
 131 00a4 0593     		str	r3, [sp, #20]
 590:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 590 0
 133 00a6 0126     		movs	r6, #1
 134 00a8 0696     		str	r6, [sp, #24]
 591:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 591 0
 136 00aa 0794     		str	r4, [sp, #28]
 592:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137              		.loc 1 592 0
 138 00ac 0894     		str	r4, [sp, #32]
 593:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 139              		.loc 1 593 0
 140 00ae 05A9     		add	r1, sp, #20
 141 00b0 4046     		mov	r0, r8
 142 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL4:
 594:Src/main.c    **** 
 595:Src/main.c    ****   /*Configure GPIO pin : DebugTiming_Pin */
 596:Src/main.c    ****   GPIO_InitStruct.Pin = DebugTiming_Pin;
 144              		.loc 1 596 0
 145 00b6 1023     		movs	r3, #16
 146 00b8 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 14


 597:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 147              		.loc 1 597 0
 148 00ba 0696     		str	r6, [sp, #24]
 598:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 598 0
 150 00bc 0794     		str	r4, [sp, #28]
 599:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 151              		.loc 1 599 0
 152 00be 0894     		str	r4, [sp, #32]
 600:Src/main.c    ****   HAL_GPIO_Init(DebugTiming_GPIO_Port, &GPIO_InitStruct);
 153              		.loc 1 600 0
 154 00c0 05A9     		add	r1, sp, #20
 155 00c2 2846     		mov	r0, r5
 156 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL5:
 601:Src/main.c    **** 
 602:Src/main.c    ****   /*Configure GPIO pin : Tirette_Pin */
 603:Src/main.c    ****   GPIO_InitStruct.Pin = Tirette_Pin;
 158              		.loc 1 603 0
 159 00c8 4FF48053 		mov	r3, #4096
 160 00cc 0593     		str	r3, [sp, #20]
 604:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 161              		.loc 1 604 0
 162 00ce 0694     		str	r4, [sp, #24]
 605:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 605 0
 164 00d0 0794     		str	r4, [sp, #28]
 606:Src/main.c    ****   HAL_GPIO_Init(Tirette_GPIO_Port, &GPIO_InitStruct);
 165              		.loc 1 606 0
 166 00d2 05A9     		add	r1, sp, #20
 167 00d4 2846     		mov	r0, r5
 168 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 169              	.LVL6:
 607:Src/main.c    **** 
 608:Src/main.c    ****   /*Configure GPIO pin : DIR2_Pin */
 609:Src/main.c    ****   GPIO_InitStruct.Pin = DIR2_Pin;
 170              		.loc 1 609 0
 171 00da 2023     		movs	r3, #32
 172 00dc 0593     		str	r3, [sp, #20]
 610:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 173              		.loc 1 610 0
 174 00de 0696     		str	r6, [sp, #24]
 611:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 175              		.loc 1 611 0
 176 00e0 0794     		str	r4, [sp, #28]
 612:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 177              		.loc 1 612 0
 178 00e2 0894     		str	r4, [sp, #32]
 613:Src/main.c    ****   HAL_GPIO_Init(DIR2_GPIO_Port, &GPIO_InitStruct);
 179              		.loc 1 613 0
 180 00e4 05A9     		add	r1, sp, #20
 181 00e6 3846     		mov	r0, r7
 182 00e8 FFF7FEFF 		bl	HAL_GPIO_Init
 183              	.LVL7:
 614:Src/main.c    **** 
 615:Src/main.c    **** }
 184              		.loc 1 615 0
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 15


 185 00ec 0AB0     		add	sp, sp, #40
 186              	.LCFI2:
 187              		.cfi_def_cfa_offset 24
 188              		@ sp needed
 189 00ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 190              	.L4:
 191 00f2 00BF     		.align	2
 192              	.L3:
 193 00f4 00380240 		.word	1073887232
 194 00f8 00080240 		.word	1073874944
 195 00fc 00040240 		.word	1073873920
 196 0100 00002110 		.word	270598144
 197 0104 00000240 		.word	1073872896
 198              		.cfi_endproc
 199              	.LFE132:
 201              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 202              		.align	1
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv4-sp-d16
 208              	MX_USART2_UART_Init:
 209              	.LFB131:
 531:Src/main.c    **** 
 210              		.loc 1 531 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 08B5     		push	{r3, lr}
 215              	.LCFI3:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 3, -8
 218              		.cfi_offset 14, -4
 540:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 219              		.loc 1 540 0
 220 0002 0848     		ldr	r0, .L7
 221 0004 084B     		ldr	r3, .L7+4
 222 0006 0360     		str	r3, [r0]
 541:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 223              		.loc 1 541 0
 224 0008 4FF4E133 		mov	r3, #115200
 225 000c 4360     		str	r3, [r0, #4]
 542:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 226              		.loc 1 542 0
 227 000e 0023     		movs	r3, #0
 228 0010 8360     		str	r3, [r0, #8]
 543:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 229              		.loc 1 543 0
 230 0012 C360     		str	r3, [r0, #12]
 544:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 231              		.loc 1 544 0
 232 0014 0361     		str	r3, [r0, #16]
 545:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 233              		.loc 1 545 0
 234 0016 0C22     		movs	r2, #12
 235 0018 4261     		str	r2, [r0, #20]
 546:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 16


 236              		.loc 1 546 0
 237 001a 8361     		str	r3, [r0, #24]
 547:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 238              		.loc 1 547 0
 239 001c C361     		str	r3, [r0, #28]
 548:Src/main.c    ****   {
 240              		.loc 1 548 0
 241 001e FFF7FEFF 		bl	HAL_UART_Init
 242              	.LVL8:
 243 0022 08BD     		pop	{r3, pc}
 244              	.L8:
 245              		.align	2
 246              	.L7:
 247 0024 00000000 		.word	huart2
 248 0028 00440040 		.word	1073759232
 249              		.cfi_endproc
 250              	.LFE131:
 252              		.section	.text.MX_TIM2_Init,"ax",%progbits
 253              		.align	1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	MX_TIM2_Init:
 260              	.LFB127:
 339:Src/main.c    **** 
 261              		.loc 1 339 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 40
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 30B5     		push	{r4, r5, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 12
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
 270              		.cfi_offset 14, -4
 271 0002 8BB0     		sub	sp, sp, #44
 272              	.LCFI5:
 273              		.cfi_def_cfa_offset 56
 345:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 274              		.loc 1 345 0
 275 0004 0024     		movs	r4, #0
 276 0006 0894     		str	r4, [sp, #32]
 277 0008 0994     		str	r4, [sp, #36]
 346:Src/main.c    **** 
 278              		.loc 1 346 0
 279 000a 0194     		str	r4, [sp, #4]
 280 000c 0294     		str	r4, [sp, #8]
 281 000e 0394     		str	r4, [sp, #12]
 282 0010 0494     		str	r4, [sp, #16]
 283 0012 0594     		str	r4, [sp, #20]
 284 0014 0694     		str	r4, [sp, #24]
 285 0016 0794     		str	r4, [sp, #28]
 351:Src/main.c    ****   htim2.Init.Prescaler = 0;
 286              		.loc 1 351 0
 287 0018 114D     		ldr	r5, .L11
 288 001a 4FF08043 		mov	r3, #1073741824
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 17


 289 001e 2B60     		str	r3, [r5]
 352:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 290              		.loc 1 352 0
 291 0020 6C60     		str	r4, [r5, #4]
 353:Src/main.c    ****   htim2.Init.Period = 10000;
 292              		.loc 1 353 0
 293 0022 AC60     		str	r4, [r5, #8]
 354:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 294              		.loc 1 354 0
 295 0024 42F21073 		movw	r3, #10000
 296 0028 EB60     		str	r3, [r5, #12]
 355:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 297              		.loc 1 355 0
 298 002a 2C61     		str	r4, [r5, #16]
 356:Src/main.c    ****   {
 299              		.loc 1 356 0
 300 002c 2846     		mov	r0, r5
 301 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 302              	.LVL9:
 360:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 303              		.loc 1 360 0
 304 0032 0894     		str	r4, [sp, #32]
 361:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 305              		.loc 1 361 0
 306 0034 0994     		str	r4, [sp, #36]
 362:Src/main.c    ****   {
 307              		.loc 1 362 0
 308 0036 08A9     		add	r1, sp, #32
 309 0038 2846     		mov	r0, r5
 310 003a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 311              	.LVL10:
 366:Src/main.c    ****   sConfigOC.Pulse = 0;
 312              		.loc 1 366 0
 313 003e 6023     		movs	r3, #96
 314 0040 0193     		str	r3, [sp, #4]
 367:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 315              		.loc 1 367 0
 316 0042 0294     		str	r4, [sp, #8]
 368:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 317              		.loc 1 368 0
 318 0044 0394     		str	r4, [sp, #12]
 369:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 319              		.loc 1 369 0
 320 0046 0594     		str	r4, [sp, #20]
 370:Src/main.c    ****   {
 321              		.loc 1 370 0
 322 0048 0422     		movs	r2, #4
 323 004a 0DEB0201 		add	r1, sp, r2
 324 004e 2846     		mov	r0, r5
 325 0050 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 326              	.LVL11:
 377:Src/main.c    **** 
 327              		.loc 1 377 0
 328 0054 2846     		mov	r0, r5
 329 0056 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 330              	.LVL12:
 379:Src/main.c    **** 
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 18


 331              		.loc 1 379 0
 332 005a 0BB0     		add	sp, sp, #44
 333              	.LCFI6:
 334              		.cfi_def_cfa_offset 12
 335              		@ sp needed
 336 005c 30BD     		pop	{r4, r5, pc}
 337              	.L12:
 338 005e 00BF     		.align	2
 339              	.L11:
 340 0060 00000000 		.word	htim2
 341              		.cfi_endproc
 342              	.LFE127:
 344              		.section	.text.MX_TIM3_Init,"ax",%progbits
 345              		.align	1
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	MX_TIM3_Init:
 352              	.LFB128:
 387:Src/main.c    **** 
 353              		.loc 1 387 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 40
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 30B5     		push	{r4, r5, lr}
 358              	.LCFI7:
 359              		.cfi_def_cfa_offset 12
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 5, -8
 362              		.cfi_offset 14, -4
 363 0002 8BB0     		sub	sp, sp, #44
 364              	.LCFI8:
 365              		.cfi_def_cfa_offset 56
 393:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 366              		.loc 1 393 0
 367 0004 0024     		movs	r4, #0
 368 0006 0894     		str	r4, [sp, #32]
 369 0008 0994     		str	r4, [sp, #36]
 394:Src/main.c    **** 
 370              		.loc 1 394 0
 371 000a 0194     		str	r4, [sp, #4]
 372 000c 0294     		str	r4, [sp, #8]
 373 000e 0394     		str	r4, [sp, #12]
 374 0010 0494     		str	r4, [sp, #16]
 375 0012 0594     		str	r4, [sp, #20]
 376 0014 0694     		str	r4, [sp, #24]
 377 0016 0794     		str	r4, [sp, #28]
 399:Src/main.c    ****   htim3.Init.Prescaler = 0;
 378              		.loc 1 399 0
 379 0018 104D     		ldr	r5, .L15
 380 001a 114B     		ldr	r3, .L15+4
 381 001c 2B60     		str	r3, [r5]
 400:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 382              		.loc 1 400 0
 383 001e 6C60     		str	r4, [r5, #4]
 401:Src/main.c    ****   htim3.Init.Period = 10000;
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 19


 384              		.loc 1 401 0
 385 0020 AC60     		str	r4, [r5, #8]
 402:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 386              		.loc 1 402 0
 387 0022 42F21073 		movw	r3, #10000
 388 0026 EB60     		str	r3, [r5, #12]
 403:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 389              		.loc 1 403 0
 390 0028 2C61     		str	r4, [r5, #16]
 404:Src/main.c    ****   {
 391              		.loc 1 404 0
 392 002a 2846     		mov	r0, r5
 393 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 394              	.LVL13:
 408:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 395              		.loc 1 408 0
 396 0030 0894     		str	r4, [sp, #32]
 409:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 397              		.loc 1 409 0
 398 0032 0994     		str	r4, [sp, #36]
 410:Src/main.c    ****   {
 399              		.loc 1 410 0
 400 0034 08A9     		add	r1, sp, #32
 401 0036 2846     		mov	r0, r5
 402 0038 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 403              	.LVL14:
 414:Src/main.c    ****   sConfigOC.Pulse = 0;
 404              		.loc 1 414 0
 405 003c 6023     		movs	r3, #96
 406 003e 0193     		str	r3, [sp, #4]
 415:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 407              		.loc 1 415 0
 408 0040 0294     		str	r4, [sp, #8]
 416:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 409              		.loc 1 416 0
 410 0042 0394     		str	r4, [sp, #12]
 417:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 411              		.loc 1 417 0
 412 0044 0594     		str	r4, [sp, #20]
 418:Src/main.c    ****   {
 413              		.loc 1 418 0
 414 0046 2246     		mov	r2, r4
 415 0048 01A9     		add	r1, sp, #4
 416 004a 2846     		mov	r0, r5
 417 004c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 418              	.LVL15:
 425:Src/main.c    **** 
 419              		.loc 1 425 0
 420 0050 2846     		mov	r0, r5
 421 0052 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 422              	.LVL16:
 427:Src/main.c    **** 
 423              		.loc 1 427 0
 424 0056 0BB0     		add	sp, sp, #44
 425              	.LCFI9:
 426              		.cfi_def_cfa_offset 12
 427              		@ sp needed
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 20


 428 0058 30BD     		pop	{r4, r5, pc}
 429              	.L16:
 430 005a 00BF     		.align	2
 431              	.L15:
 432 005c 00000000 		.word	htim3
 433 0060 00040040 		.word	1073742848
 434              		.cfi_endproc
 435              	.LFE128:
 437              		.section	.text.MX_TIM4_Init,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	MX_TIM4_Init:
 445              	.LFB129:
 435:Src/main.c    **** 
 446              		.loc 1 435 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 48
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450 0000 30B5     		push	{r4, r5, lr}
 451              	.LCFI10:
 452              		.cfi_def_cfa_offset 12
 453              		.cfi_offset 4, -12
 454              		.cfi_offset 5, -8
 455              		.cfi_offset 14, -4
 456 0002 8DB0     		sub	sp, sp, #52
 457              	.LCFI11:
 458              		.cfi_def_cfa_offset 64
 441:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 459              		.loc 1 441 0
 460 0004 2422     		movs	r2, #36
 461 0006 0021     		movs	r1, #0
 462 0008 03A8     		add	r0, sp, #12
 463 000a FFF7FEFF 		bl	memset
 464              	.LVL17:
 442:Src/main.c    **** 
 465              		.loc 1 442 0
 466 000e 0025     		movs	r5, #0
 467 0010 0195     		str	r5, [sp, #4]
 468 0012 0295     		str	r5, [sp, #8]
 447:Src/main.c    ****   htim4.Init.Prescaler = 0;
 469              		.loc 1 447 0
 470 0014 0D4C     		ldr	r4, .L19
 471 0016 0E4B     		ldr	r3, .L19+4
 472 0018 2360     		str	r3, [r4]
 448:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 473              		.loc 1 448 0
 474 001a 6560     		str	r5, [r4, #4]
 449:Src/main.c    ****   htim4.Init.Period = 0xffff;
 475              		.loc 1 449 0
 476 001c A560     		str	r5, [r4, #8]
 450:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 477              		.loc 1 450 0
 478 001e 4FF6FF73 		movw	r3, #65535
 479 0022 E360     		str	r3, [r4, #12]
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 21


 451:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 480              		.loc 1 451 0
 481 0024 2561     		str	r5, [r4, #16]
 452:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 482              		.loc 1 452 0
 483 0026 0123     		movs	r3, #1
 484 0028 0393     		str	r3, [sp, #12]
 454:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 485              		.loc 1 454 0
 486 002a 0593     		str	r3, [sp, #20]
 456:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 487              		.loc 1 456 0
 488 002c 0522     		movs	r2, #5
 489 002e 0792     		str	r2, [sp, #28]
 458:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 490              		.loc 1 458 0
 491 0030 0993     		str	r3, [sp, #36]
 460:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 492              		.loc 1 460 0
 493 0032 0B92     		str	r2, [sp, #44]
 461:Src/main.c    ****   {
 494              		.loc 1 461 0
 495 0034 03A9     		add	r1, sp, #12
 496 0036 2046     		mov	r0, r4
 497 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 498              	.LVL18:
 465:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 499              		.loc 1 465 0
 500 003c 0195     		str	r5, [sp, #4]
 466:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 501              		.loc 1 466 0
 502 003e 0295     		str	r5, [sp, #8]
 467:Src/main.c    ****   {
 503              		.loc 1 467 0
 504 0040 01A9     		add	r1, sp, #4
 505 0042 2046     		mov	r0, r4
 506 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 507              	.LVL19:
 475:Src/main.c    **** 
 508              		.loc 1 475 0
 509 0048 0DB0     		add	sp, sp, #52
 510              	.LCFI12:
 511              		.cfi_def_cfa_offset 12
 512              		@ sp needed
 513 004a 30BD     		pop	{r4, r5, pc}
 514              	.L20:
 515              		.align	2
 516              	.L19:
 517 004c 00000000 		.word	htim4
 518 0050 00080040 		.word	1073743872
 519              		.cfi_endproc
 520              	.LFE129:
 522              		.section	.text.MX_TIM5_Init,"ax",%progbits
 523              		.align	1
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 22


 527              		.fpu fpv4-sp-d16
 529              	MX_TIM5_Init:
 530              	.LFB130:
 483:Src/main.c    **** 
 531              		.loc 1 483 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 48
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535 0000 30B5     		push	{r4, r5, lr}
 536              	.LCFI13:
 537              		.cfi_def_cfa_offset 12
 538              		.cfi_offset 4, -12
 539              		.cfi_offset 5, -8
 540              		.cfi_offset 14, -4
 541 0002 8DB0     		sub	sp, sp, #52
 542              	.LCFI14:
 543              		.cfi_def_cfa_offset 64
 489:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 544              		.loc 1 489 0
 545 0004 2422     		movs	r2, #36
 546 0006 0021     		movs	r1, #0
 547 0008 03A8     		add	r0, sp, #12
 548 000a FFF7FEFF 		bl	memset
 549              	.LVL20:
 490:Src/main.c    **** 
 550              		.loc 1 490 0
 551 000e 0025     		movs	r5, #0
 552 0010 0195     		str	r5, [sp, #4]
 553 0012 0295     		str	r5, [sp, #8]
 495:Src/main.c    ****   htim5.Init.Prescaler = 0;
 554              		.loc 1 495 0
 555 0014 0D4C     		ldr	r4, .L23
 556 0016 0E4B     		ldr	r3, .L23+4
 557 0018 2360     		str	r3, [r4]
 496:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 558              		.loc 1 496 0
 559 001a 6560     		str	r5, [r4, #4]
 497:Src/main.c    ****   htim5.Init.Period = 0xffff;
 560              		.loc 1 497 0
 561 001c A560     		str	r5, [r4, #8]
 498:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 562              		.loc 1 498 0
 563 001e 4FF6FF73 		movw	r3, #65535
 564 0022 E360     		str	r3, [r4, #12]
 499:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 565              		.loc 1 499 0
 566 0024 2561     		str	r5, [r4, #16]
 500:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 567              		.loc 1 500 0
 568 0026 0123     		movs	r3, #1
 569 0028 0393     		str	r3, [sp, #12]
 502:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 570              		.loc 1 502 0
 571 002a 0593     		str	r3, [sp, #20]
 504:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 572              		.loc 1 504 0
 573 002c 0522     		movs	r2, #5
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 23


 574 002e 0792     		str	r2, [sp, #28]
 506:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 575              		.loc 1 506 0
 576 0030 0993     		str	r3, [sp, #36]
 508:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 577              		.loc 1 508 0
 578 0032 0B92     		str	r2, [sp, #44]
 509:Src/main.c    ****   {
 579              		.loc 1 509 0
 580 0034 03A9     		add	r1, sp, #12
 581 0036 2046     		mov	r0, r4
 582 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 583              	.LVL21:
 513:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 584              		.loc 1 513 0
 585 003c 0195     		str	r5, [sp, #4]
 514:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 586              		.loc 1 514 0
 587 003e 0295     		str	r5, [sp, #8]
 515:Src/main.c    ****   {
 588              		.loc 1 515 0
 589 0040 01A9     		add	r1, sp, #4
 590 0042 2046     		mov	r0, r4
 591 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 592              	.LVL22:
 523:Src/main.c    **** 
 593              		.loc 1 523 0
 594 0048 0DB0     		add	sp, sp, #52
 595              	.LCFI15:
 596              		.cfi_def_cfa_offset 12
 597              		@ sp needed
 598 004a 30BD     		pop	{r4, r5, pc}
 599              	.L24:
 600              		.align	2
 601              	.L23:
 602 004c 00000000 		.word	htim5
 603 0050 000C0040 		.word	1073744896
 604              		.cfi_endproc
 605              	.LFE130:
 607              		.section	.text.MX_TIM1_Init,"ax",%progbits
 608              		.align	1
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	MX_TIM1_Init:
 615              	.LFB126:
 276:Src/main.c    **** 
 616              		.loc 1 276 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 64
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620 0000 30B5     		push	{r4, r5, lr}
 621              	.LCFI16:
 622              		.cfi_def_cfa_offset 12
 623              		.cfi_offset 4, -12
 624              		.cfi_offset 5, -8
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 24


 625              		.cfi_offset 14, -4
 626 0002 91B0     		sub	sp, sp, #68
 627              	.LCFI17:
 628              		.cfi_def_cfa_offset 80
 282:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 629              		.loc 1 282 0
 630 0004 0024     		movs	r4, #0
 631 0006 0E94     		str	r4, [sp, #56]
 632 0008 0F94     		str	r4, [sp, #60]
 283:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 633              		.loc 1 283 0
 634 000a 0794     		str	r4, [sp, #28]
 635 000c 0894     		str	r4, [sp, #32]
 636 000e 0994     		str	r4, [sp, #36]
 637 0010 0A94     		str	r4, [sp, #40]
 638 0012 0B94     		str	r4, [sp, #44]
 639 0014 0C94     		str	r4, [sp, #48]
 640 0016 0D94     		str	r4, [sp, #52]
 284:Src/main.c    **** 
 641              		.loc 1 284 0
 642 0018 0094     		str	r4, [sp]
 643 001a 0194     		str	r4, [sp, #4]
 644 001c 0294     		str	r4, [sp, #8]
 645 001e 0394     		str	r4, [sp, #12]
 646 0020 0494     		str	r4, [sp, #16]
 647 0022 0594     		str	r4, [sp, #20]
 648 0024 0694     		str	r4, [sp, #24]
 289:Src/main.c    ****   htim1.Init.Prescaler = 72;
 649              		.loc 1 289 0
 650 0026 1A4D     		ldr	r5, .L27
 651 0028 1A4B     		ldr	r3, .L27+4
 652 002a 2B60     		str	r3, [r5]
 290:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 653              		.loc 1 290 0
 654 002c 4823     		movs	r3, #72
 655 002e 6B60     		str	r3, [r5, #4]
 291:Src/main.c    ****   htim1.Init.Period = 20000;
 656              		.loc 1 291 0
 657 0030 AC60     		str	r4, [r5, #8]
 292:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 658              		.loc 1 292 0
 659 0032 44F62063 		movw	r3, #20000
 660 0036 EB60     		str	r3, [r5, #12]
 293:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 661              		.loc 1 293 0
 662 0038 2C61     		str	r4, [r5, #16]
 294:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 663              		.loc 1 294 0
 664 003a 6C61     		str	r4, [r5, #20]
 295:Src/main.c    ****   {
 665              		.loc 1 295 0
 666 003c 2846     		mov	r0, r5
 667 003e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 668              	.LVL23:
 299:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 669              		.loc 1 299 0
 670 0042 0E94     		str	r4, [sp, #56]
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 25


 300:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 671              		.loc 1 300 0
 672 0044 0F94     		str	r4, [sp, #60]
 301:Src/main.c    ****   {
 673              		.loc 1 301 0
 674 0046 0EA9     		add	r1, sp, #56
 675 0048 2846     		mov	r0, r5
 676 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 677              	.LVL24:
 305:Src/main.c    ****   sConfigOC.Pulse = 1500;
 678              		.loc 1 305 0
 679 004e 6023     		movs	r3, #96
 680 0050 0793     		str	r3, [sp, #28]
 306:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 681              		.loc 1 306 0
 682 0052 40F2DC53 		movw	r3, #1500
 683 0056 0893     		str	r3, [sp, #32]
 307:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 684              		.loc 1 307 0
 685 0058 0994     		str	r4, [sp, #36]
 308:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 686              		.loc 1 308 0
 687 005a 0B94     		str	r4, [sp, #44]
 309:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 688              		.loc 1 309 0
 689 005c 0C94     		str	r4, [sp, #48]
 310:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 690              		.loc 1 310 0
 691 005e 0D94     		str	r4, [sp, #52]
 311:Src/main.c    ****   {
 692              		.loc 1 311 0
 693 0060 0C22     		movs	r2, #12
 694 0062 07A9     		add	r1, sp, #28
 695 0064 2846     		mov	r0, r5
 696 0066 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 697              	.LVL25:
 315:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 698              		.loc 1 315 0
 699 006a 0094     		str	r4, [sp]
 316:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 700              		.loc 1 316 0
 701 006c 0194     		str	r4, [sp, #4]
 317:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 702              		.loc 1 317 0
 703 006e 0294     		str	r4, [sp, #8]
 318:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 704              		.loc 1 318 0
 705 0070 0394     		str	r4, [sp, #12]
 319:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 706              		.loc 1 319 0
 707 0072 0494     		str	r4, [sp, #16]
 320:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 708              		.loc 1 320 0
 709 0074 4FF40053 		mov	r3, #8192
 710 0078 0593     		str	r3, [sp, #20]
 321:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 711              		.loc 1 321 0
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 26


 712 007a 0694     		str	r4, [sp, #24]
 322:Src/main.c    ****   {
 713              		.loc 1 322 0
 714 007c 6946     		mov	r1, sp
 715 007e 2846     		mov	r0, r5
 716 0080 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 717              	.LVL26:
 329:Src/main.c    **** 
 718              		.loc 1 329 0
 719 0084 2846     		mov	r0, r5
 720 0086 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 721              	.LVL27:
 331:Src/main.c    **** 
 722              		.loc 1 331 0
 723 008a 11B0     		add	sp, sp, #68
 724              	.LCFI18:
 725              		.cfi_def_cfa_offset 12
 726              		@ sp needed
 727 008c 30BD     		pop	{r4, r5, pc}
 728              	.L28:
 729 008e 00BF     		.align	2
 730              	.L27:
 731 0090 00000000 		.word	htim1
 732 0094 00000140 		.word	1073807360
 733              		.cfi_endproc
 734              	.LFE126:
 736              		.section	.text.SystemClock_Config,"ax",%progbits
 737              		.align	1
 738              		.global	SystemClock_Config
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 742              		.fpu fpv4-sp-d16
 744              	SystemClock_Config:
 745              	.LFB125:
 232:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 746              		.loc 1 232 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 80
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750 0000 30B5     		push	{r4, r5, lr}
 751              	.LCFI19:
 752              		.cfi_def_cfa_offset 12
 753              		.cfi_offset 4, -12
 754              		.cfi_offset 5, -8
 755              		.cfi_offset 14, -4
 756 0002 95B0     		sub	sp, sp, #84
 757              	.LCFI20:
 758              		.cfi_def_cfa_offset 96
 233:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 759              		.loc 1 233 0
 760 0004 3022     		movs	r2, #48
 761 0006 0021     		movs	r1, #0
 762 0008 08A8     		add	r0, sp, #32
 763 000a FFF7FEFF 		bl	memset
 764              	.LVL28:
 234:Src/main.c    **** 
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 27


 765              		.loc 1 234 0
 766 000e 0024     		movs	r4, #0
 767 0010 0394     		str	r4, [sp, #12]
 768 0012 0494     		str	r4, [sp, #16]
 769 0014 0594     		str	r4, [sp, #20]
 770 0016 0694     		str	r4, [sp, #24]
 771 0018 0794     		str	r4, [sp, #28]
 772              	.LBB6:
 238:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 773              		.loc 1 238 0
 774 001a 0194     		str	r4, [sp, #4]
 775 001c 1B4B     		ldr	r3, .L31
 776 001e 1A6C     		ldr	r2, [r3, #64]
 777 0020 42F08052 		orr	r2, r2, #268435456
 778 0024 1A64     		str	r2, [r3, #64]
 779 0026 1B6C     		ldr	r3, [r3, #64]
 780 0028 03F08053 		and	r3, r3, #268435456
 781 002c 0193     		str	r3, [sp, #4]
 782 002e 019B     		ldr	r3, [sp, #4]
 783              	.LBE6:
 784              	.LBB7:
 239:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 785              		.loc 1 239 0
 786 0030 0294     		str	r4, [sp, #8]
 787 0032 174A     		ldr	r2, .L31+4
 788 0034 1368     		ldr	r3, [r2]
 789 0036 23F44043 		bic	r3, r3, #49152
 790 003a 43F40043 		orr	r3, r3, #32768
 791 003e 1360     		str	r3, [r2]
 792 0040 1368     		ldr	r3, [r2]
 793 0042 03F44043 		and	r3, r3, #49152
 794 0046 0293     		str	r3, [sp, #8]
 795 0048 029B     		ldr	r3, [sp, #8]
 796              	.LBE7:
 242:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 797              		.loc 1 242 0
 798 004a 0225     		movs	r5, #2
 799 004c 0895     		str	r5, [sp, #32]
 243:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800              		.loc 1 243 0
 801 004e 0123     		movs	r3, #1
 802 0050 0B93     		str	r3, [sp, #44]
 244:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 803              		.loc 1 244 0
 804 0052 1023     		movs	r3, #16
 805 0054 0C93     		str	r3, [sp, #48]
 245:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 806              		.loc 1 245 0
 807 0056 0E95     		str	r5, [sp, #56]
 246:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 808              		.loc 1 246 0
 809 0058 0F94     		str	r4, [sp, #60]
 247:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 810              		.loc 1 247 0
 811 005a 1093     		str	r3, [sp, #64]
 248:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 812              		.loc 1 248 0
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 28


 813 005c 4FF4A873 		mov	r3, #336
 814 0060 1193     		str	r3, [sp, #68]
 249:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 815              		.loc 1 249 0
 816 0062 0423     		movs	r3, #4
 817 0064 1293     		str	r3, [sp, #72]
 250:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 818              		.loc 1 250 0
 819 0066 0723     		movs	r3, #7
 820 0068 1393     		str	r3, [sp, #76]
 251:Src/main.c    ****   {
 821              		.loc 1 251 0
 822 006a 08A8     		add	r0, sp, #32
 823 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 824              	.LVL29:
 257:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 825              		.loc 1 257 0
 826 0070 0F23     		movs	r3, #15
 827 0072 0393     		str	r3, [sp, #12]
 259:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 828              		.loc 1 259 0
 829 0074 0495     		str	r5, [sp, #16]
 260:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 830              		.loc 1 260 0
 831 0076 0594     		str	r4, [sp, #20]
 261:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 832              		.loc 1 261 0
 833 0078 4FF48053 		mov	r3, #4096
 834 007c 0693     		str	r3, [sp, #24]
 262:Src/main.c    **** 
 835              		.loc 1 262 0
 836 007e 0794     		str	r4, [sp, #28]
 264:Src/main.c    ****   {
 837              		.loc 1 264 0
 838 0080 2946     		mov	r1, r5
 839 0082 03A8     		add	r0, sp, #12
 840 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 841              	.LVL30:
 268:Src/main.c    **** 
 842              		.loc 1 268 0
 843 0088 15B0     		add	sp, sp, #84
 844              	.LCFI21:
 845              		.cfi_def_cfa_offset 12
 846              		@ sp needed
 847 008a 30BD     		pop	{r4, r5, pc}
 848              	.L32:
 849              		.align	2
 850              	.L31:
 851 008c 00380240 		.word	1073887232
 852 0090 00700040 		.word	1073770496
 853              		.cfi_endproc
 854              	.LFE125:
 856              		.section	.text.moteurDroit,"ax",%progbits
 857              		.align	1
 858              		.global	moteurDroit
 859              		.syntax unified
 860              		.thumb
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 29


 861              		.thumb_func
 862              		.fpu fpv4-sp-d16
 864              	moteurDroit:
 865              	.LFB133:
 616:Src/main.c    **** 
 617:Src/main.c    **** /* USER CODE BEGIN 4 */
 618:Src/main.c    **** void moteurDroit(int PWM)
 619:Src/main.c    **** {
 866              		.loc 1 619 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              	.LVL31:
 871 0000 10B5     		push	{r4, lr}
 872              	.LCFI22:
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 4, -8
 875              		.cfi_offset 14, -4
 876              	.LBB8:
 620:Src/main.c    ****     if(PWM == abs(PWM))
 877              		.loc 1 620 0
 878 0002 80EAE074 		eor	r4, r0, r0, asr #31
 879 0006 A4EBE074 		sub	r4, r4, r0, asr #31
 880 000a A042     		cmp	r0, r4
 881 000c 0DD0     		beq	.L39
 621:Src/main.c    ****     {
 622:Src/main.c    ****         HAL_GPIO_WritePin(DIR1_GPIO_Port, DIR1_Pin, GPIO_PIN_RESET);
 623:Src/main.c    ****     }
 624:Src/main.c    ****     else
 625:Src/main.c    ****     {
 626:Src/main.c    ****         HAL_GPIO_WritePin(DIR1_GPIO_Port, DIR1_Pin, GPIO_PIN_SET);
 882              		.loc 1 626 0
 883 000e 0122     		movs	r2, #1
 884 0010 4FF48061 		mov	r1, #1024
 885 0014 0B48     		ldr	r0, .L41
 886              	.LVL32:
 887 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 888              	.LVL33:
 889              	.L35:
 890              	.LBE8:
 891              	.LBB9:
 627:Src/main.c    ****     }
 628:Src/main.c    ****     if (abs(PWM) > 10000)
 892              		.loc 1 628 0
 893 001a 42F21073 		movw	r3, #10000
 894 001e 9C42     		cmp	r4, r3
 895 0020 0ADC     		bgt	.L40
 629:Src/main.c    ****     {
 630:Src/main.c    **** 		htim2.Instance->CCR2 = 10000;
 631:Src/main.c    ****     }
 632:Src/main.c    ****     else 
 633:Src/main.c    ****     {
 634:Src/main.c    **** 		htim2.Instance->CCR2 = abs(PWM);
 896              		.loc 1 634 0
 897 0022 094B     		ldr	r3, .L41+4
 898 0024 1B68     		ldr	r3, [r3]
 899 0026 9C63     		str	r4, [r3, #56]
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 30


 900 0028 10BD     		pop	{r4, pc}
 901              	.LVL34:
 902              	.L39:
 903              	.LBE9:
 904              	.LBB10:
 622:Src/main.c    ****     }
 905              		.loc 1 622 0
 906 002a 0022     		movs	r2, #0
 907 002c 4FF48061 		mov	r1, #1024
 908 0030 0448     		ldr	r0, .L41
 909              	.LVL35:
 910 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 911              	.LVL36:
 912 0036 F0E7     		b	.L35
 913              	.L40:
 914              	.LBE10:
 915              	.LBB11:
 630:Src/main.c    ****     }
 916              		.loc 1 630 0
 917 0038 034B     		ldr	r3, .L41+4
 918 003a 1B68     		ldr	r3, [r3]
 919 003c 42F21072 		movw	r2, #10000
 920 0040 9A63     		str	r2, [r3, #56]
 921 0042 10BD     		pop	{r4, pc}
 922              	.L42:
 923              		.align	2
 924              	.L41:
 925 0044 00000240 		.word	1073872896
 926 0048 00000000 		.word	htim2
 927              	.LBE11:
 928              		.cfi_endproc
 929              	.LFE133:
 931              		.section	.text.moteurGauche,"ax",%progbits
 932              		.align	1
 933              		.global	moteurGauche
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	moteurGauche:
 940              	.LFB134:
 635:Src/main.c    **** 	}
 636:Src/main.c    **** }
 637:Src/main.c    **** 
 638:Src/main.c    **** 
 639:Src/main.c    **** void moteurGauche(int PWM)
 640:Src/main.c    **** {
 941              		.loc 1 640 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              	.LVL37:
 946 0000 10B5     		push	{r4, lr}
 947              	.LCFI23:
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 4, -8
 950              		.cfi_offset 14, -4
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 31


 951              	.LBB12:
 641:Src/main.c    ****     if(PWM == abs(PWM))
 952              		.loc 1 641 0
 953 0002 80EAE074 		eor	r4, r0, r0, asr #31
 954 0006 A4EBE074 		sub	r4, r4, r0, asr #31
 955 000a A042     		cmp	r0, r4
 956 000c 0CD0     		beq	.L49
 642:Src/main.c    ****     {
 643:Src/main.c    ****         HAL_GPIO_WritePin(DIR2_GPIO_Port, DIR2_Pin, GPIO_PIN_SET);
 644:Src/main.c    ****     }
 645:Src/main.c    ****     else
 646:Src/main.c    ****     {
 647:Src/main.c    ****         HAL_GPIO_WritePin(DIR2_GPIO_Port, DIR2_Pin, GPIO_PIN_RESET);
 957              		.loc 1 647 0
 958 000e 0022     		movs	r2, #0
 959 0010 2021     		movs	r1, #32
 960 0012 0B48     		ldr	r0, .L51
 961              	.LVL38:
 962 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 963              	.LVL39:
 964              	.L45:
 965              	.LBE12:
 966              	.LBB13:
 648:Src/main.c    ****     }
 649:Src/main.c    ****     if (abs(PWM) > 10000)
 967              		.loc 1 649 0
 968 0018 42F21073 		movw	r3, #10000
 969 001c 9C42     		cmp	r4, r3
 970 001e 09DC     		bgt	.L50
 650:Src/main.c    ****     {
 651:Src/main.c    **** 		htim3.Instance->CCR1 = 10000;
 652:Src/main.c    ****     }
 653:Src/main.c    ****     else 
 654:Src/main.c    ****     {
 655:Src/main.c    **** 		htim3.Instance->CCR1 = abs(PWM);
 971              		.loc 1 655 0
 972 0020 084B     		ldr	r3, .L51+4
 973 0022 1B68     		ldr	r3, [r3]
 974 0024 5C63     		str	r4, [r3, #52]
 975 0026 10BD     		pop	{r4, pc}
 976              	.LVL40:
 977              	.L49:
 978              	.LBE13:
 979              	.LBB14:
 643:Src/main.c    ****     }
 980              		.loc 1 643 0
 981 0028 0122     		movs	r2, #1
 982 002a 2021     		movs	r1, #32
 983 002c 0448     		ldr	r0, .L51
 984              	.LVL41:
 985 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 986              	.LVL42:
 987 0032 F1E7     		b	.L45
 988              	.L50:
 989              	.LBE14:
 990              	.LBB15:
 651:Src/main.c    ****     }
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 32


 991              		.loc 1 651 0
 992 0034 034B     		ldr	r3, .L51+4
 993 0036 1B68     		ldr	r3, [r3]
 994 0038 42F21072 		movw	r2, #10000
 995 003c 5A63     		str	r2, [r3, #52]
 996 003e 10BD     		pop	{r4, pc}
 997              	.L52:
 998              		.align	2
 999              	.L51:
 1000 0040 00040240 		.word	1073873920
 1001 0044 00000000 		.word	htim3
 1002              	.LBE15:
 1003              		.cfi_endproc
 1004              	.LFE134:
 1006              		.global	__aeabi_i2d
 1007              		.global	__aeabi_dmul
 1008              		.global	__aeabi_d2iz
 1009              		.section	.text.main,"ax",%progbits
 1010              		.align	1
 1011              		.global	main
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1015              		.fpu fpv4-sp-d16
 1017              	main:
 1018              	.LFB124:
 119:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1019              		.loc 1 119 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1024              	.LCFI24:
 1025              		.cfi_def_cfa_offset 36
 1026              		.cfi_offset 4, -36
 1027              		.cfi_offset 5, -32
 1028              		.cfi_offset 6, -28
 1029              		.cfi_offset 7, -24
 1030              		.cfi_offset 8, -20
 1031              		.cfi_offset 9, -16
 1032              		.cfi_offset 10, -12
 1033              		.cfi_offset 11, -8
 1034              		.cfi_offset 14, -4
 1035 0004 91B0     		sub	sp, sp, #68
 1036              	.LCFI25:
 1037              		.cfi_def_cfa_offset 104
 127:Src/main.c    **** 
 1038              		.loc 1 127 0
 1039 0006 FFF7FEFF 		bl	HAL_Init
 1040              	.LVL43:
 134:Src/main.c    **** 
 1041              		.loc 1 134 0
 1042 000a FFF7FEFF 		bl	SystemClock_Config
 1043              	.LVL44:
 141:Src/main.c    ****   MX_USART2_UART_Init();
 1044              		.loc 1 141 0
 1045 000e FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 33


 1046              	.LVL45:
 142:Src/main.c    ****   MX_TIM2_Init();
 1047              		.loc 1 142 0
 1048 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 1049              	.LVL46:
 143:Src/main.c    ****   MX_TIM3_Init();
 1050              		.loc 1 143 0
 1051 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1052              	.LVL47:
 144:Src/main.c    ****   MX_TIM4_Init();
 1053              		.loc 1 144 0
 1054 001a FFF7FEFF 		bl	MX_TIM3_Init
 1055              	.LVL48:
 145:Src/main.c    ****   MX_TIM5_Init();
 1056              		.loc 1 145 0
 1057 001e FFF7FEFF 		bl	MX_TIM4_Init
 1058              	.LVL49:
 146:Src/main.c    ****   MX_TIM1_Init();
 1059              		.loc 1 146 0
 1060 0022 FFF7FEFF 		bl	MX_TIM5_Init
 1061              	.LVL50:
 147:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1062              		.loc 1 147 0
 1063 0026 FFF7FEFF 		bl	MX_TIM1_Init
 1064              	.LVL51:
 149:Src/main.c    ****   HAL_TIM_PWM_Start (&htim3, TIM_CHANNEL_1);
 1065              		.loc 1 149 0
 1066 002a 0421     		movs	r1, #4
 1067 002c 7A48     		ldr	r0, .L62+8
 1068 002e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1069              	.LVL52:
 150:Src/main.c    ****   HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 1070              		.loc 1 150 0
 1071 0032 0021     		movs	r1, #0
 1072 0034 7948     		ldr	r0, .L62+12
 1073 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1074              	.LVL53:
 151:Src/main.c    ****   HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_ALL);
 1075              		.loc 1 151 0
 1076 003a 1821     		movs	r1, #24
 1077 003c 7848     		ldr	r0, .L62+16
 1078 003e FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 1079              	.LVL54:
 152:Src/main.c    ****   HAL_TIM_PWM_Start (&htim1, TIM_CHANNEL_4);
 1080              		.loc 1 152 0
 1081 0042 1821     		movs	r1, #24
 1082 0044 7748     		ldr	r0, .L62+20
 1083 0046 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 1084              	.LVL55:
 153:Src/main.c    ****   /* USER CODE END 2 */
 1085              		.loc 1 153 0
 1086 004a 0C21     		movs	r1, #12
 1087 004c 7648     		ldr	r0, .L62+24
 1088 004e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1089              	.LVL56:
 158:Src/main.c    ****   while(HAL_GPIO_ReadPin(Tirette_GPIO_Port, Tirette_Pin))
 1090              		.loc 1 158 0
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 34


 1091 0052 4FF0FF33 		mov	r3, #-1
 1092 0056 2F22     		movs	r2, #47
 1093 0058 7449     		ldr	r1, .L62+28
 1094 005a 7548     		ldr	r0, .L62+32
 1095 005c FFF7FEFF 		bl	HAL_UART_Transmit
 1096              	.LVL57:
 1097              	.L54:
 159:Src/main.c    ****   {}
 1098              		.loc 1 159 0 discriminator 1
 1099 0060 4FF48051 		mov	r1, #4096
 1100 0064 7348     		ldr	r0, .L62+36
 1101 0066 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1102              	.LVL58:
 1103 006a 0028     		cmp	r0, #0
 1104 006c F8D1     		bne	.L54
 161:Src/main.c    ****     
 1105              		.loc 1 161 0
 1106 006e FFF7FEFF 		bl	HAL_GetTick
 1107              	.LVL59:
 1108 0072 8146     		mov	r9, r0
 1109              	.LVL60:
 163:Src/main.c    ****   //HAL_Delay(1000);
 1110              		.loc 1 163 0
 1111 0074 4FF0FF33 		mov	r3, #-1
 1112 0078 1A22     		movs	r2, #26
 1113 007a 6F49     		ldr	r1, .L62+40
 1114 007c 6C48     		ldr	r0, .L62+32
 1115              	.LVL61:
 1116 007e FFF7FEFF 		bl	HAL_UART_Transmit
 1117              	.LVL62:
 165:Src/main.c    **** 
 1118              		.loc 1 165 0
 1119 0082 FFF7FEFF 		bl	HAL_GetTick
 1120              	.LVL63:
 1121 0086 8046     		mov	r8, r0
 1122              	.LVL64:
 170:Src/main.c    ****   TIM5->CNT = 30000;
 1123              		.loc 1 170 0
 1124 0088 47F23053 		movw	r3, #30000
 1125 008c 6B4A     		ldr	r2, .L62+44
 1126 008e 5362     		str	r3, [r2, #36]
 171:Src/main.c    ****   
 1127              		.loc 1 171 0
 1128 0090 02F58062 		add	r2, r2, #1024
 1129 0094 5362     		str	r3, [r2, #36]
 173:Src/main.c    **** 
 1130              		.loc 1 173 0
 1131 0096 644B     		ldr	r3, .L62+24
 1132 0098 1B68     		ldr	r3, [r3]
 1133 009a 40F2DC52 		movw	r2, #1500
 1134 009e 1A64     		str	r2, [r3, #64]
 1135 00a0 04E0     		b	.L55
 1136              	.LVL65:
 1137              	.L56:
 1138              	.LBB16:
 179:Src/main.c    ****     HAL_GPIO_WritePin(DebugTiming_GPIO_Port, DebugTiming_Pin, GPIO_PIN_RESET);
 1139              		.loc 1 179 0
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 35


 1140 00a2 0122     		movs	r2, #1
 1141 00a4 1021     		movs	r1, #16
 1142 00a6 6348     		ldr	r0, .L62+36
 1143 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1144              	.LVL66:
 1145              	.L55:
 178:Src/main.c    ****     {HAL_GPIO_WritePin(DebugTiming_GPIO_Port, DebugTiming_Pin, GPIO_PIN_SET);}
 1146              		.loc 1 178 0
 1147 00ac FFF7FEFF 		bl	HAL_GetTick
 1148              	.LVL67:
 1149 00b0 A0EB0800 		sub	r0, r0, r8
 1150 00b4 624B     		ldr	r3, .L62+48
 1151 00b6 1B68     		ldr	r3, [r3]
 1152 00b8 9842     		cmp	r0, r3
 1153 00ba F2D3     		bcc	.L56
 180:Src/main.c    ****     
 1154              		.loc 1 180 0
 1155 00bc 0022     		movs	r2, #0
 1156 00be 1021     		movs	r1, #16
 1157 00c0 5C48     		ldr	r0, .L62+36
 1158 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1159              	.LVL68:
 182:Src/main.c    ****     {
 1160              		.loc 1 182 0
 1161 00c6 FFF7FEFF 		bl	HAL_GetTick
 1162              	.LVL69:
 1163 00ca A0EB0900 		sub	r0, r0, r9
 1164 00ce 5D4B     		ldr	r3, .L62+52
 1165 00d0 9842     		cmp	r0, r3
 1166 00d2 00F29380 		bhi	.L61
 189:Src/main.c    ****     int tim4 = (TIM4->CNT-30000);
 1167              		.loc 1 189 0
 1168 00d6 FFF7FEFF 		bl	HAL_GetTick
 1169              	.LVL70:
 1170 00da 8046     		mov	r8, r0
 1171              	.LVL71:
 190:Src/main.c    ****     int tim5 = (-TIM5->CNT+30000);
 1172              		.loc 1 190 0
 1173 00dc 5749     		ldr	r1, .L62+44
 1174 00de 4E6A     		ldr	r6, [r1, #36]
 1175 00e0 A6F5EA46 		sub	r6, r6, #29952
 1176 00e4 303E     		subs	r6, r6, #48
 1177              	.LVL72:
 191:Src/main.c    ****     TIM4->CNT = 30000;
 1178              		.loc 1 191 0
 1179 00e6 584A     		ldr	r2, .L62+56
 1180 00e8 506A     		ldr	r0, [r2, #36]
 1181              	.LVL73:
 1182 00ea 47F23053 		movw	r3, #30000
 1183              	.LVL74:
 192:Src/main.c    ****     TIM5->CNT = 30000;
 1184              		.loc 1 192 0
 1185 00ee 4B62     		str	r3, [r1, #36]
 193:Src/main.c    ****     
 1186              		.loc 1 193 0
 1187 00f0 5362     		str	r3, [r2, #36]
 195:Src/main.c    ****     
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 36


 1188              		.loc 1 195 0
 1189 00f2 181A     		subs	r0, r3, r0
 1190              	.LVL75:
 1191 00f4 FFF7FEFF 		bl	__aeabi_i2d
 1192              	.LVL76:
 1193 00f8 45A3     		adr	r3, .L62
 1194 00fa D3E90023 		ldrd	r2, [r3]
 1195 00fe FFF7FEFF 		bl	__aeabi_dmul
 1196              	.LVL77:
 1197 0102 FFF7FEFF 		bl	__aeabi_d2iz
 1198              	.LVL78:
 1199 0106 0746     		mov	r7, r0
 1200              	.LVL79:
 197:Src/main.c    ****     tim4Tot += tim4;//for debug
 1201              		.loc 1 197 0
 1202 0108 504D     		ldr	r5, .L62+60
 1203 010a 514C     		ldr	r4, .L62+64
 1204 010c DFF85CA1 		ldr	r10, .L62+92
 1205 0110 CDF800A0 		str	r10, [sp]
 1206 0114 2B46     		mov	r3, r5
 1207 0116 2246     		mov	r2, r4
 1208 0118 0146     		mov	r1, r0
 1209 011a 3046     		mov	r0, r6
 1210              	.LVL80:
 1211 011c FFF7FEFF 		bl	updatePos
 1212              	.LVL81:
 198:Src/main.c    ****     tim5Tot += tim5;
 1213              		.loc 1 198 0
 1214 0120 4C4A     		ldr	r2, .L62+68
 1215 0122 1368     		ldr	r3, [r2]
 1216 0124 3344     		add	r3, r3, r6
 1217 0126 1360     		str	r3, [r2]
 199:Src/main.c    ****     
 1218              		.loc 1 199 0
 1219 0128 4B4A     		ldr	r2, .L62+72
 1220 012a 1368     		ldr	r3, [r2]
 1221 012c 3B44     		add	r3, r3, r7
 1222 012e 1360     		str	r3, [r2]
 201:Src/main.c    ****     
 1223              		.loc 1 201 0
 1224 0130 9AED002B 		vldr.64	d2, [r10]
 1225 0134 95ED001B 		vldr.64	d1, [r5]
 1226 0138 94ED000B 		vldr.64	d0, [r4]
 1227 013c DFF840B1 		ldr	fp, .L62+112
 1228 0140 DFF840A1 		ldr	r10, .L62+116
 1229 0144 6C46     		mov	r4, sp
 1230 0146 3A4D     		ldr	r5, .L62+32
 1231 0148 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1232 014a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1233 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1234 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1235 0150 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1236 0152 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1237 0154 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1238 0158 84E80F00 		stm	r4, {r0, r1, r2, r3}
 1239 015c 3B46     		mov	r3, r7
 1240 015e 3246     		mov	r2, r6
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 37


 1241 0160 5946     		mov	r1, fp
 1242 0162 5046     		mov	r0, r10
 1243 0164 FFF7FEFF 		bl	stateMachine
 1244              	.LVL82:
 203:Src/main.c    ****     moteurDroit(consigneDroit);
 1245              		.loc 1 203 0
 1246 0168 DBF80000 		ldr	r0, [fp]
 1247 016c FFF7FEFF 		bl	moteurGauche
 1248              	.LVL83:
 204:Src/main.c    ****     
 1249              		.loc 1 204 0
 1250 0170 DAF80000 		ldr	r0, [r10]
 1251 0174 FFF7FEFF 		bl	moteurDroit
 1252              	.LVL84:
 207:Src/main.c    ****     if (_DEBUG == 1)
 1253              		.loc 1 207 0
 1254 0178 384A     		ldr	r2, .L62+76
 1255 017a 1368     		ldr	r3, [r2]
 1256 017c 0133     		adds	r3, r3, #1
 1257 017e 1360     		str	r3, [r2]
 210:Src/main.c    ****         {
 1258              		.loc 1 210 0
 1259 0180 374A     		ldr	r2, .L62+80
 1260 0182 1268     		ldr	r2, [r2]
 1261 0184 9342     		cmp	r3, r2
 1262 0186 91D1     		bne	.L55
 212:Src/main.c    ****             HAL_UART_Transmit(&huart2, buffer, sizeof(buffer), HAL_MAX_DELAY);
 1263              		.loc 1 212 0
 1264 0188 314B     		ldr	r3, .L62+64
 1265 018a D3E90067 		ldrd	r6, [r3]
 1266              	.LVL85:
 1267 018e 354D     		ldr	r5, .L62+84
 1268 0190 0022     		movs	r2, #0
 1269 0192 354B     		ldr	r3, .L62+88
 1270 0194 3549     		ldr	r1, .L62+92
 1271 0196 D1E90001 		ldrd	r0, [r1]
 1272 019a FFF7FEFF 		bl	__aeabi_dmul
 1273              	.LVL86:
 1274 019e CDE90201 		strd	r0, [sp, #8]
 1275 01a2 2A4B     		ldr	r3, .L62+60
 1276 01a4 D3E90023 		ldrd	r2, [r3]
 1277 01a8 CDE90023 		strd	r2, [sp]
 1278 01ac 3246     		mov	r2, r6
 1279 01ae 3B46     		mov	r3, r7
 1280 01b0 2F49     		ldr	r1, .L62+96
 1281 01b2 2846     		mov	r0, r5
 1282 01b4 FFF7FEFF 		bl	sprintf
 1283              	.LVL87:
 213:Src/main.c    ****             sprintf(buffer2, "tot : %d / %d / %d / %d\n",tim4Tot, tim5Tot, consigneDroit, consigneG
 1284              		.loc 1 213 0
 1285 01b8 1D4C     		ldr	r4, .L62+32
 1286 01ba 4FF0FF33 		mov	r3, #-1
 1287 01be 3222     		movs	r2, #50
 1288 01c0 2946     		mov	r1, r5
 1289 01c2 2046     		mov	r0, r4
 1290 01c4 FFF7FEFF 		bl	HAL_UART_Transmit
 1291              	.LVL88:
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 38


 214:Src/main.c    ****             HAL_UART_Transmit(&huart2, buffer2, sizeof(buffer2), HAL_MAX_DELAY);
 1292              		.loc 1 214 0
 1293 01c8 234B     		ldr	r3, .L62+72
 1294 01ca 1B68     		ldr	r3, [r3]
 1295 01cc 214A     		ldr	r2, .L62+68
 1296 01ce 1268     		ldr	r2, [r2]
 1297 01d0 284D     		ldr	r5, .L62+100
 1298 01d2 DBF80010 		ldr	r1, [fp]
 1299 01d6 0191     		str	r1, [sp, #4]
 1300 01d8 DAF80010 		ldr	r1, [r10]
 1301 01dc 0091     		str	r1, [sp]
 1302 01de 2649     		ldr	r1, .L62+104
 1303 01e0 2846     		mov	r0, r5
 1304 01e2 FFF7FEFF 		bl	sprintf
 1305              	.LVL89:
 215:Src/main.c    ****             debugCounter = 0;
 1306              		.loc 1 215 0
 1307 01e6 4FF0FF33 		mov	r3, #-1
 1308 01ea 3222     		movs	r2, #50
 1309 01ec 2946     		mov	r1, r5
 1310 01ee 2046     		mov	r0, r4
 1311 01f0 FFF7FEFF 		bl	HAL_UART_Transmit
 1312              	.LVL90:
 216:Src/main.c    ****         }
 1313              		.loc 1 216 0
 1314 01f4 0022     		movs	r2, #0
 1315 01f6 194B     		ldr	r3, .L62+76
 1316 01f8 1A60     		str	r2, [r3]
 1317 01fa 57E7     		b	.L55
 1318              	.LVL91:
 1319              	.L61:
 184:Src/main.c    ****         while(1){}
 1320              		.loc 1 184 0
 1321 01fc 4FF0FF33 		mov	r3, #-1
 1322 0200 1A22     		movs	r2, #26
 1323 0202 1E49     		ldr	r1, .L62+108
 1324 0204 0A48     		ldr	r0, .L62+32
 1325 0206 FFF7FEFF 		bl	HAL_UART_Transmit
 1326              	.LVL92:
 1327              	.L58:
 1328 020a FEE7     		b	.L58
 1329              	.L63:
 1330 020c AFF30080 		.align	3
 1331              	.L62:
 1332 0210 5B423EE8 		.word	-398572965
 1333 0214 D9ACF03F 		.word	1072737497
 1334 0218 00000000 		.word	htim2
 1335 021c 00000000 		.word	htim3
 1336 0220 00000000 		.word	htim4
 1337 0224 00000000 		.word	htim5
 1338 0228 00000000 		.word	htim1
 1339 022c 00000000 		.word	.LC0
 1340 0230 00000000 		.word	huart2
 1341 0234 00080240 		.word	1073874944
 1342 0238 30000000 		.word	.LC1
 1343 023c 00080040 		.word	1073743872
 1344 0240 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 39


 1345 0244 905F0100 		.word	90000
 1346 0248 000C0040 		.word	1073744896
 1347 024c 00000000 		.word	.LANCHOR1
 1348 0250 00000000 		.word	.LANCHOR2
 1349 0254 00000000 		.word	.LANCHOR4
 1350 0258 00000000 		.word	.LANCHOR5
 1351 025c 00000000 		.word	.LANCHOR8
 1352 0260 00000000 		.word	.LANCHOR9
 1353 0264 00000000 		.word	.LANCHOR10
 1354 0268 00408F40 		.word	1083129856
 1355 026c 00000000 		.word	.LANCHOR3
 1356 0270 68000000 		.word	.LC3
 1357 0274 00000000 		.word	.LANCHOR11
 1358 0278 7C000000 		.word	.LC4
 1359 027c 4C000000 		.word	.LC2
 1360 0280 00000000 		.word	.LANCHOR6
 1361 0284 00000000 		.word	.LANCHOR7
 1362              	.LBE16:
 1363              		.cfi_endproc
 1364              	.LFE124:
 1366              		.section	.text.Error_Handler,"ax",%progbits
 1367              		.align	1
 1368              		.global	Error_Handler
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1372              		.fpu fpv4-sp-d16
 1374              	Error_Handler:
 1375              	.LFB135:
 656:Src/main.c    **** 	}
 657:Src/main.c    **** }
 658:Src/main.c    **** 
 659:Src/main.c    **** 
 660:Src/main.c    **** /* USER CODE END 4 */
 661:Src/main.c    **** 
 662:Src/main.c    **** /**
 663:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 664:Src/main.c    ****   * @retval None
 665:Src/main.c    ****   */
 666:Src/main.c    **** void Error_Handler(void)
 667:Src/main.c    **** {
 1376              		.loc 1 667 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381 0000 7047     		bx	lr
 1382              		.cfi_endproc
 1383              	.LFE135:
 1385              		.global	debugMessageFrequency
 1386              		.global	fixedFrequency
 1387              		.global	buffer2
 1388              		.global	buffer
 1389              		.global	tim5Tot
 1390              		.global	tim4Tot
 1391              		.global	debugCounter
 1392              		.global	consigneGauche
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 40


 1393              		.global	consigneDroit
 1394              		.global	angle
 1395              		.global	positionY
 1396              		.global	positionX
 1397              		.comm	huart2,64,4
 1398              		.comm	htim5,60,4
 1399              		.comm	htim4,60,4
 1400              		.comm	htim3,60,4
 1401              		.comm	htim2,60,4
 1402              		.comm	htim1,60,4
 1403              		.section	.bss.angle,"aw",%nobits
 1404              		.align	3
 1405              		.set	.LANCHOR3,. + 0
 1408              	angle:
 1409 0000 00000000 		.space	8
 1409      00000000 
 1410              		.section	.bss.buffer,"aw",%nobits
 1411              		.align	2
 1412              		.set	.LANCHOR10,. + 0
 1415              	buffer:
 1416 0000 00000000 		.space	50
 1416      00000000 
 1416      00000000 
 1416      00000000 
 1416      00000000 
 1417              		.section	.bss.buffer2,"aw",%nobits
 1418              		.align	2
 1419              		.set	.LANCHOR11,. + 0
 1422              	buffer2:
 1423 0000 00000000 		.space	50
 1423      00000000 
 1423      00000000 
 1423      00000000 
 1423      00000000 
 1424              		.section	.bss.consigneDroit,"aw",%nobits
 1425              		.align	2
 1426              		.set	.LANCHOR7,. + 0
 1429              	consigneDroit:
 1430 0000 00000000 		.space	4
 1431              		.section	.bss.consigneGauche,"aw",%nobits
 1432              		.align	2
 1433              		.set	.LANCHOR6,. + 0
 1436              	consigneGauche:
 1437 0000 00000000 		.space	4
 1438              		.section	.bss.debugCounter,"aw",%nobits
 1439              		.align	2
 1440              		.set	.LANCHOR8,. + 0
 1443              	debugCounter:
 1444 0000 00000000 		.space	4
 1445              		.section	.bss.positionX,"aw",%nobits
 1446              		.align	3
 1447              		.set	.LANCHOR2,. + 0
 1450              	positionX:
 1451 0000 00000000 		.space	8
 1451      00000000 
 1452              		.section	.bss.positionY,"aw",%nobits
 1453              		.align	3
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 41


 1454              		.set	.LANCHOR1,. + 0
 1457              	positionY:
 1458 0000 00000000 		.space	8
 1458      00000000 
 1459              		.section	.bss.tim4Tot,"aw",%nobits
 1460              		.align	2
 1461              		.set	.LANCHOR4,. + 0
 1464              	tim4Tot:
 1465 0000 00000000 		.space	4
 1466              		.section	.bss.tim5Tot,"aw",%nobits
 1467              		.align	2
 1468              		.set	.LANCHOR5,. + 0
 1471              	tim5Tot:
 1472 0000 00000000 		.space	4
 1473              		.section	.data.debugMessageFrequency,"aw",%progbits
 1474              		.align	2
 1475              		.set	.LANCHOR9,. + 0
 1478              	debugMessageFrequency:
 1479 0000 0A000000 		.word	10
 1480              		.section	.data.fixedFrequency,"aw",%progbits
 1481              		.align	2
 1482              		.set	.LANCHOR0,. + 0
 1485              	fixedFrequency:
 1486 0000 28000000 		.word	40
 1487              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1488              		.align	2
 1489              	.LC0:
 1490 0000 54697265 		.ascii	"Tire moi la tirette, que ma bobinette choisse\012\000"
 1490      206D6F69 
 1490      206C6120 
 1490      74697265 
 1490      7474652C 
 1491 002f 00       		.space	1
 1492              	.LC1:
 1493 0030 41747474 		.ascii	"Atttenzion, zest barti !\012\000"
 1493      656E7A69 
 1493      6F6E2C20 
 1493      7A657374 
 1493      20626172 
 1494 004a 0000     		.space	2
 1495              	.LC2:
 1496 004c 46696E20 		.ascii	"Fin de match -- Timeout \012\000"
 1496      6465206D 
 1496      61746368 
 1496      202D2D20 
 1496      54696D65 
 1497 0066 0000     		.space	2
 1498              	.LC3:
 1499 0068 706F7320 		.ascii	"pos : %f / %f / %f\012\000"
 1499      3A202566 
 1499      202F2025 
 1499      66202F20 
 1499      25660A00 
 1500              	.LC4:
 1501 007c 746F7420 		.ascii	"tot : %d / %d / %d / %d\012\000"
 1501      3A202564 
 1501      202F2025 
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 42


 1501      64202F20 
 1501      2564202F 
 1502              		.text
 1503              	.Letext0:
 1504              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1505              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1506              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1507              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1508              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1509              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1510              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1511              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 1512              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1513              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1514              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1515              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1516              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1517              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1518              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1519              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1520              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1521              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1522              		.file 20 "<built-in>"
 1523              		.file 21 "Inc/main.h"
 1524              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1525              		.file 23 "Inc/assert.h"
 1526              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:193    .text.MX_GPIO_Init:000000f4 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:202    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:208    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:247    .text.MX_USART2_UART_Init:00000024 $d
                            *COM*:00000040 huart2
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:253    .text.MX_TIM2_Init:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:259    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:340    .text.MX_TIM2_Init:00000060 $d
                            *COM*:0000003c htim2
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:345    .text.MX_TIM3_Init:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:351    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:432    .text.MX_TIM3_Init:0000005c $d
                            *COM*:0000003c htim3
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:438    .text.MX_TIM4_Init:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:444    .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:517    .text.MX_TIM4_Init:0000004c $d
                            *COM*:0000003c htim4
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:523    .text.MX_TIM5_Init:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:529    .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:602    .text.MX_TIM5_Init:0000004c $d
                            *COM*:0000003c htim5
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:608    .text.MX_TIM1_Init:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:614    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:731    .text.MX_TIM1_Init:00000090 $d
                            *COM*:0000003c htim1
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:737    .text.SystemClock_Config:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:744    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:851    .text.SystemClock_Config:0000008c $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:857    .text.moteurDroit:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:864    .text.moteurDroit:00000000 moteurDroit
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:925    .text.moteurDroit:00000044 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:932    .text.moteurGauche:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:939    .text.moteurGauche:00000000 moteurGauche
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1000   .text.moteurGauche:00000040 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1010   .text.main:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1017   .text.main:00000000 main
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1332   .text.main:00000210 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1367   .text.Error_Handler:00000000 $t
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1374   .text.Error_Handler:00000000 Error_Handler
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1478   .data.debugMessageFrequency:00000000 debugMessageFrequency
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1485   .data.fixedFrequency:00000000 fixedFrequency
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1422   .bss.buffer2:00000000 buffer2
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1415   .bss.buffer:00000000 buffer
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1471   .bss.tim5Tot:00000000 tim5Tot
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1464   .bss.tim4Tot:00000000 tim4Tot
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1443   .bss.debugCounter:00000000 debugCounter
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1436   .bss.consigneGauche:00000000 consigneGauche
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1429   .bss.consigneDroit:00000000 consigneDroit
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1408   .bss.angle:00000000 angle
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1457   .bss.positionY:00000000 positionY
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1450   .bss.positionX:00000000 positionX
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1404   .bss.angle:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1411   .bss.buffer:00000000 $d
ARM GAS  C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s 			page 44


C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1418   .bss.buffer2:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1425   .bss.consigneDroit:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1432   .bss.consigneGauche:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1439   .bss.debugCounter:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1446   .bss.positionX:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1453   .bss.positionY:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1460   .bss.tim4Tot:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1467   .bss.tim5Tot:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1474   .data.debugMessageFrequency:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1481   .data.fixedFrequency:00000000 $d
C:\Users\smigaud\AppData\Local\Temp\ccUmNW2c.s:1488   .rodata.main.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_ConfigBreakDeadTime
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_d2iz
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
HAL_UART_Transmit
HAL_GPIO_ReadPin
HAL_GetTick
updatePos
stateMachine
sprintf
